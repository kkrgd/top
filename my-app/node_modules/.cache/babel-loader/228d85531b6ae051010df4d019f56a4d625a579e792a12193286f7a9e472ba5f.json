{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\nvar _index = require(\"../_lib/defaultOptions/index.js\");\nvar _index2 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../differenceInMonths/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../differenceInSeconds/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../_lib/defaultLocale/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index7 = _interopRequireDefault(require(\"../_lib/cloneObject/index.js\"));\nvar _index8 = _interopRequireDefault(require(\"../_lib/assign/index.js\"));\nvar _index9 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\nvar _index10 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nfunction formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  (0, _index10.default)(2, arguments);\n  var defaultOptions = (0, _index.getDefaultOptions)();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index5.default;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = (0, _index2.default)(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = (0, _index8.default)((0, _index7.default)(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = (0, _index6.default)(dirtyBaseDate);\n    dateRight = (0, _index6.default)(dirtyDate);\n  } else {\n    dateLeft = (0, _index6.default)(dirtyDate);\n    dateRight = (0, _index6.default)(dirtyBaseDate);\n  }\n  var seconds = (0, _index4.default)(dateRight, dateLeft);\n  var offsetInSeconds = ((0, _index9.default)(dateRight) - (0, _index9.default)(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = (0, _index3.default)(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","formatDistance","_index","require","_index2","_interopRequireDefault","_index3","_index4","_index5","_index6","_index7","_index8","_index9","_index10","obj","__esModule","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDate","dirtyBaseDate","options","_ref","_options$locale","arguments","defaultOptions","getDefaultOptions","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","dateLeft","dateRight","seconds","offsetInSeconds","minutes","Math","round","months","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","floor","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/formatDistance/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\n\nvar _index = require(\"../_lib/defaultOptions/index.js\");\n\nvar _index2 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../differenceInMonths/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../differenceInSeconds/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../_lib/defaultLocale/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"../_lib/cloneObject/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"../_lib/assign/index.js\"));\n\nvar _index9 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index10 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nfunction formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n\n  (0, _index10.default)(2, arguments);\n  var defaultOptions = (0, _index.getDefaultOptions)();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index5.default;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = (0, _index2.default)(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = (0, _index8.default)((0, _index7.default)(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = (0, _index6.default)(dirtyBaseDate);\n    dateRight = (0, _index6.default)(dirtyDate);\n  } else {\n    dateLeft = (0, _index6.default)(dirtyDate);\n    dateRight = (0, _index6.default)(dirtyBaseDate);\n  }\n\n  var seconds = (0, _index4.default)(dateRight, dateLeft);\n  var offsetInSeconds = ((0, _index9.default)(dateRight) - (0, _index9.default)(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = (0, _index3.default)(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}\n\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}