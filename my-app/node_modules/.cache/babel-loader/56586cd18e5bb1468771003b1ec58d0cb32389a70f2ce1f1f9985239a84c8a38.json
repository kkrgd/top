{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\Inquiry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { init, send } from \"@emailjs/browser\";\nimport { Grid, TextField, Button } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myStyleText = {\n  \"& .MuiInputBase-input\": {\n    color: \"#6f5b41\" // 入力文字の色\n  },\n\n  width: {\n    sm: 200,\n    md: 500\n  }\n};\nconst myStyleBox = {\n  width: {\n    sm: 200,\n    md: 500\n  }\n};\nconst myStyleButtonSmall = {\n  \"&:hover\": {\n    backgroundColor: \"#fbae49\"\n  },\n  display: {\n    xs: \"block\",\n    sm: \"none\"\n  }\n};\nconst myStyleButtonLarge = {\n  \"&:hover\": {\n    backgroundColor: \"#fbae49\"\n  },\n  display: {\n    xs: \"none\",\n    sm: \"block\"\n  }\n};\nfunction Inquiry() {\n  _s();\n  const {\n    ref,\n    inView\n  } = useInView({\n    // オプション\n    rootMargin: \"-50px\",\n    // ref要素が現れてから50px過ぎたら\n    triggerOnce: true // 最初の一度だけ実行\n  });\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [emailErrorName, setEmailErrorName] = React.useState(\"\");\n  const [emailErrorAddress, setEmailErrorAddress] = React.useState(\"\");\n  const [emailErrorContent, setEmailErrorContent] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"item_9\",\n    className: \"Inquiry\",\n    style: {\n      height: \"50vh\"\n    },\n    ref: ref,\n    children: inView && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        className: \"animate__animated animate__fadeInUp\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          mb: 7,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"name\",\n              label: \"\\u304A\\u540D\\u524D\",\n              variant: \"outlined\",\n              size: \"small\",\n              error: !!emailErrorName,\n              helperText: emailErrorName,\n              onChange: e => setName(e.target.value),\n              color: \"secondary\",\n              sx: myStyleText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n              variant: \"outlined\",\n              size: \"small\",\n              error: !!emailErrorAddress,\n              helperText: emailErrorAddress,\n              onChange: e => setEmail(e.target.value),\n              color: \"secondary\",\n              sx: myStyleText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"content\",\n              label: \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\",\n              multiline: true,\n              variant: \"outlined\",\n              error: !!emailErrorContent,\n              helperText: emailErrorContent,\n              onChange: e => setContent(e.target.value),\n              color: \"secondary\",\n              sx: myStyleText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: myStyleBox,\n              display: \"flex\",\n              alignItems: \"flex-end\",\n              justifyContent: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                size: \"small\",\n                sx: myStyleButtonSmall,\n                children: \"\\u9001\\u4FE1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                size: \"large\",\n                sx: myStyleButtonLarge,\n                children: \"\\u9001\\u4FE1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Inquiry, \"R2o0CG7BfhXuEAxeb3bBv8nyndo=\", false, function () {\n  return [useInView];\n});\n_c = Inquiry;\nconst onSubmit = async props => {\n  props.preventDefault();\n\n  // 必要なIDをそれぞれ環境変数から取得\n  const userID = process.env.REACT_APP_PUBLICKEY || \"\";\n  const serviceID = process.env.REACT_APP_SERVICE_ID || \"\";\n  const templateID = process.env.REACT_APP_TEMPLATE_ID || \"\";\n  // emailJS初期化\n  console.log(\"aaa\");\n  init(userID);\n\n  // emailJS送信データを定義\n  const params = {\n    formName: props.name,\n    email: props.email,\n    content: props.content\n  };\n\n  // emailJS送信\n  try {\n    // if (!props.name) {\n    //   props.setEmailErrorName(\"お名前を入力してください\");\n    // } else if (!props.email) {\n    //   props.setEmailErrorAddress(\"メールアドレスを入力してください\");\n    // } else if (!props.content) {\n    //   props.setEmailErrorContent(\"お問い合わせ内容を入力してください\");\n    // } else {}\n    await send(serviceID, templateID, params, userID);\n    alert(\"送信成功\");\n  } catch (error) {\n    // 送信失敗したらalertで表示\n    alert(error);\n  }\n};\nexport default Inquiry;\nvar _c;\n$RefreshReg$(_c, \"Inquiry\");","map":{"version":3,"names":["React","useState","Typography","init","send","Grid","TextField","Button","Box","useInView","jsxDEV","_jsxDEV","myStyleText","color","width","sm","md","myStyleBox","myStyleButtonSmall","backgroundColor","display","xs","myStyleButtonLarge","Inquiry","_s","ref","inView","rootMargin","triggerOnce","name","setName","email","setEmail","content","setContent","emailErrorName","setEmailErrorName","emailErrorAddress","setEmailErrorAddress","emailErrorContent","setEmailErrorContent","id","className","style","height","children","onSubmit","e","container","direction","justifyContent","alignItems","item","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","size","error","helperText","onChange","target","value","sx","multiline","type","_c","props","preventDefault","userID","process","env","REACT_APP_PUBLICKEY","serviceID","REACT_APP_SERVICE_ID","templateID","REACT_APP_TEMPLATE_ID","console","log","params","formName","alert","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/Inquiry.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { init, send } from \"@emailjs/browser\";\nimport { Grid, TextField, Button } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\n\nconst myStyleText = {\n  \"& .MuiInputBase-input\": {\n    color: \"#6f5b41\", // 入力文字の色\n  },\n  width: { sm: 200, md: 500 },\n};\nconst myStyleBox = {\n  width: { sm: 200, md: 500 },\n};\nconst myStyleButtonSmall = {\n  \"&:hover\": {\n    backgroundColor: \"#fbae49\",\n  },\n  display: { xs: \"block\", sm: \"none\" },\n};\nconst myStyleButtonLarge = {\n  \"&:hover\": {\n    backgroundColor: \"#fbae49\",\n  },\n  display: { xs: \"none\", sm: \"block\" },\n};\n\nfunction Inquiry() {\n  const { ref, inView } = useInView({\n    // オプション\n    rootMargin: \"-50px\", // ref要素が現れてから50px過ぎたら\n    triggerOnce: true, // 最初の一度だけ実行\n  });\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [emailErrorName, setEmailErrorName] = React.useState(\"\");\n  const [emailErrorAddress, setEmailErrorAddress] = React.useState(\"\");\n  const [emailErrorContent, setEmailErrorContent] = React.useState(\"\");\n  return (\n    <Box id=\"item_9\" className=\"Inquiry\" style={{ height: \"50vh\" }} ref={ref}>\n      {inView && (\n        <form onSubmit={(e) => onSubmit(e)}>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            className=\"animate__animated animate__fadeInUp\"\n          >\n            <Grid item mb={7}>\n              <Typography variant=\"h4\">お問い合わせ</Typography>\n            </Grid>\n            <Box>\n              <Grid item mb={3}>\n                <TextField\n                  id=\"name\"\n                  label=\"お名前\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  error={!!emailErrorName}\n                  helperText={emailErrorName}\n                  onChange={(e) => setName(e.target.value)}\n                  color=\"secondary\"\n                  sx={myStyleText}\n                />\n              </Grid>\n              <Grid item mb={3}>\n                <TextField\n                  id=\"email\"\n                  label=\"メールアドレス\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  error={!!emailErrorAddress}\n                  helperText={emailErrorAddress}\n                  onChange={(e) => setEmail(e.target.value)}\n                  color=\"secondary\"\n                  sx={myStyleText}\n                />\n              </Grid>\n              <Grid item mb={3}>\n                <TextField\n                  id=\"content\"\n                  label=\"お問い合わせ内容\"\n                  multiline\n                  variant=\"outlined\"\n                  error={!!emailErrorContent}\n                  helperText={emailErrorContent}\n                  onChange={(e) => setContent(e.target.value)}\n                  color=\"secondary\"\n                  sx={myStyleText}\n                />\n              </Grid>\n              <Grid item xs={6} md={6}>\n                <Box\n                  sx={myStyleBox}\n                  display=\"flex\"\n                  alignItems=\"flex-end\"\n                  justifyContent=\"flex-end\"\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    sx={myStyleButtonSmall}\n                  >\n                    送信\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    sx={myStyleButtonLarge}\n                  >\n                    送信\n                  </Button>\n                </Box>\n              </Grid>\n            </Box>\n          </Grid>\n        </form>\n      )}\n    </Box>\n  );\n}\nconst onSubmit = async (props: any) => {\n  props.preventDefault();\n\n  // 必要なIDをそれぞれ環境変数から取得\n  const userID = process.env.REACT_APP_PUBLICKEY || \"\";\n  const serviceID = process.env.REACT_APP_SERVICE_ID || \"\";\n  const templateID = process.env.REACT_APP_TEMPLATE_ID || \"\";\n  // emailJS初期化\n  console.log(\"aaa\");\n  init(userID);\n\n  // emailJS送信データを定義\n  const params = {\n    formName: props.name,\n    email: props.email,\n    content: props.content,\n  };\n\n  // emailJS送信\n  try {\n    // if (!props.name) {\n    //   props.setEmailErrorName(\"お名前を入力してください\");\n    // } else if (!props.email) {\n    //   props.setEmailErrorAddress(\"メールアドレスを入力してください\");\n    // } else if (!props.content) {\n    //   props.setEmailErrorContent(\"お問い合わせ内容を入力してください\");\n    // } else {}\n    await send(serviceID, templateID, params, userID);\n    alert(\"送信成功\");\n  } catch (error) {\n    // 送信失敗したらalertで表示\n    alert(error);\n  }\n};\n\nexport default Inquiry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}