{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\dialog\\\\ImageDialog.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { Typography, CardMedia } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nfunction SimpleDialog(props) {\n  const handleClose = () => {\n    onClose();\n  };\n  const handleListItemClick = value => {\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: props.imageValue,\n      title: \"スケジュール\",\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = SimpleDialog;\nexport default function ImageDialog(props) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = value => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [\"Selected: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: props.bookParam.image,\n      title: \"スケジュール\" + props.bookParam.id,\n      style: {\n        maxWidth: props.bookParam.sizePer + \"%\"\n      },\n      onClick: handleClickOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      imageValue: props.bookParam.image,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageDialog, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n_c2 = ImageDialog;\nvar _c, _c2;\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"ImageDialog\");","map":{"version":3,"names":["React","Dialog","Typography","CardMedia","jsxDEV","_jsxDEV","emails","SimpleDialog","props","handleClose","onClose","handleListItemClick","value","open","children","component","image","imageValue","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageDialog","_s","setOpen","useState","selectedValue","setSelectedValue","handleClickOpen","variant","bookParam","id","style","maxWidth","sizePer","_c2","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/dialog/ImageDialog.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Typography, CardMedia } from \"@mui/material\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport SampleImage2 from \"../dawnload/sampleImage_dog.jpg\";\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\n\r\nexport interface SimpleDialogProps {\r\n  open: boolean;\r\n  imageValue: string;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction SimpleDialog(props: SimpleDialogProps) {\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleListItemClick = (value: string) => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      {\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={props.imageValue}\r\n          title={\"スケジュール\"}\r\n          onClick={handleClose}\r\n        />\r\n      }\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default function ImageDialog(props: any) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value: string) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\" component=\"div\">\r\n        Selected: {selectedValue}\r\n      </Typography>\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={props.bookParam.image}\r\n        title={\"スケジュール\" + props.bookParam.id}\r\n        style={{ maxWidth: props.bookParam.sizePer + \"%\" }}\r\n        onClick={handleClickOpen}\r\n      />\r\n\r\n      <SimpleDialog\r\n        imageValue={props.bookParam.image}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAS9B,OAAOC,MAAM,MAAM,sBAAsB;AAGzC,SAASC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,MAAMC,MAAM,GAAG,CAAC,oBAAoB,EAAE,kBAAkB,CAAC;AAQzD,SAASC,YAAYA,CAACC,KAAwB,EAAE;EAC9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,mBAAmB,GAAIC,KAAa,IAAK;IAC7CF,OAAO,EAAE;EACX,CAAC;EAED,oBACEL,OAAA,CAACJ,MAAM;IAACS,OAAO,EAAED,WAAY;IAACI,IAAI,EAAEA,IAAK;IAAAC,QAAA,eAErCT,OAAA,CAACF,SAAS;MACRY,SAAS,EAAC,KAAK;MACfC,KAAK,EAAER,KAAK,CAACS,UAAW;MACxBC,KAAK,EAAE,QAAS;MAChBC,OAAO,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEG;AAEb;AAACC,EAAA,GArBQjB,YAAY;AAuBrB,eAAe,SAASkB,WAAWA,CAACjB,KAAU,EAAE;EAAAkB,EAAA;EAC9C,MAAM,CAACb,IAAI,EAAEc,OAAO,CAAC,GAAG3B,KAAK,CAAC4B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,KAAK,CAAC4B,QAAQ,CAACtB,MAAM,CAAC,CAAC,CAAC,CAAC;EAEnE,MAAMyB,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMlB,WAAW,GAAIG,KAAa,IAAK;IACrCe,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACEtB,OAAA;IAAAS,QAAA,gBACET,OAAA,CAACH,UAAU;MAAC8B,OAAO,EAAC,WAAW;MAACjB,SAAS,EAAC,KAAK;MAAAD,QAAA,GAAC,YACpC,EAACe,aAAa;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb,eACblB,OAAA,CAACF,SAAS;MACRY,SAAS,EAAC,KAAK;MACfC,KAAK,EAAER,KAAK,CAACyB,SAAS,CAACjB,KAAM;MAC7BE,KAAK,EAAE,QAAQ,GAAGV,KAAK,CAACyB,SAAS,CAACC,EAAG;MACrCC,KAAK,EAAE;QAAEC,QAAQ,EAAE5B,KAAK,CAACyB,SAAS,CAACI,OAAO,GAAG;MAAI,CAAE;MACnDlB,OAAO,EAAEY;IAAgB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eAEFlB,OAAA,CAACE,YAAY;MACXU,UAAU,EAAET,KAAK,CAACyB,SAAS,CAACjB,KAAM;MAClCH,IAAI,EAAEA,IAAK;MACXH,OAAO,EAAED;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACG,EAAA,CAhCuBD,WAAW;AAAAa,GAAA,GAAXb,WAAW;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}