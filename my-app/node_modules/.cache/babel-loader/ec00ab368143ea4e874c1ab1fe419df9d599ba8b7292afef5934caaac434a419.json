{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInCalendarISOWeeks;\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfISOWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nfunction differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3.default)(2, arguments);\n  var startOfISOWeekLeft = (0, _index2.default)(dirtyDateLeft);\n  var startOfISOWeekRight = (0, _index2.default)(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - (0, _index.default)(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - (0, _index.default)(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInCalendarISOWeeks","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","MILLISECONDS_IN_WEEK","dirtyDateLeft","dirtyDateRight","arguments","startOfISOWeekLeft","startOfISOWeekRight","timestampLeft","getTime","timestampRight","Math","round","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/differenceInCalendarISOWeeks/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInCalendarISOWeeks;\n\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfISOWeek/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nfunction differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3.default)(2, arguments);\n  var startOfISOWeekLeft = (0, _index2.default)(dirtyDateLeft);\n  var startOfISOWeekRight = (0, _index2.default)(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - (0, _index.default)(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - (0, _index.default)(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,4BAA4B;AAE9C,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kDAAkD,CAAC,CAAC;AAEhG,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAE3E,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEP,OAAO,EAAEO;EAAI,CAAC;AAAE;AAE9F,IAAIE,oBAAoB,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,4BAA4BA,CAACS,aAAa,EAAEC,cAAc,EAAE;EACnE,CAAC,CAAC,EAAEL,OAAO,CAACN,OAAO,EAAE,CAAC,EAAEY,SAAS,CAAC;EAClC,IAAIC,kBAAkB,GAAG,CAAC,CAAC,EAAER,OAAO,CAACL,OAAO,EAAEU,aAAa,CAAC;EAC5D,IAAII,mBAAmB,GAAG,CAAC,CAAC,EAAET,OAAO,CAACL,OAAO,EAAEW,cAAc,CAAC;EAC9D,IAAII,aAAa,GAAGF,kBAAkB,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACF,OAAO,EAAEa,kBAAkB,CAAC;EAC1F,IAAII,cAAc,GAAGH,mBAAmB,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACF,OAAO,EAAEc,mBAAmB,CAAC,CAAC,CAAC;EAC/F;EACA;;EAEA,OAAOI,IAAI,CAACC,KAAK,CAAC,CAACJ,aAAa,GAAGE,cAAc,IAAIR,oBAAoB,CAAC;AAC5E;AAEAW,MAAM,CAACtB,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}