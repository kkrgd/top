{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInYears;\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarYears/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nfunction differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInYears","_index","_interopRequireDefault","require","_index2","_index3","_index4","obj","__esModule","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","setFullYear","isLastYearNotFull","result","Number","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/differenceInYears/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInYears;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarYears/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nfunction differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,iBAAiB;AAEnC,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAElE,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAEtF,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAEvE,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,SAASD,sBAAsBA,CAACK,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAER,OAAO,EAAEQ;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,iBAAiBA,CAACS,aAAa,EAAEC,cAAc,EAAE;EACxD,CAAC,CAAC,EAAEJ,OAAO,CAACP,OAAO,EAAE,CAAC,EAAEY,SAAS,CAAC;EAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAEX,MAAM,CAACF,OAAO,EAAEU,aAAa,CAAC;EACjD,IAAII,SAAS,GAAG,CAAC,CAAC,EAAEZ,MAAM,CAACF,OAAO,EAAEW,cAAc,CAAC;EACnD,IAAII,IAAI,GAAG,CAAC,CAAC,EAAET,OAAO,CAACN,OAAO,EAAEa,QAAQ,EAAEC,SAAS,CAAC;EACpD,IAAIE,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEb,OAAO,CAACL,OAAO,EAAEa,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;EACtE;;EAEAD,QAAQ,CAACM,WAAW,CAAC,IAAI,CAAC;EAC1BL,SAAS,CAACK,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B;;EAEA,IAAIC,iBAAiB,GAAG,CAAC,CAAC,EAAEd,OAAO,CAACN,OAAO,EAAEa,QAAQ,EAAEC,SAAS,CAAC,KAAK,CAACC,IAAI;EAC3E,IAAIM,MAAM,GAAGN,IAAI,IAAIC,UAAU,GAAGM,MAAM,CAACF,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAE9D,OAAOC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;AAClC;AAEAE,MAAM,CAACzB,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}