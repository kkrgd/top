{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\WhatNew.tsx\";\nimport React from \"react\";\nimport { Typography, Table, TableContainer, TableHead, TableRow, TableCell } from \"@mui/material\";\nimport { format, parse } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createInfo(inputDate, info) {\n  const formatday = format(parse(inputDate, \"yyyyMMdd\", new Date()), \"yyyy年.MM.dd\");\n  return formatday + \"：\" + info;\n}\nconst informations = [createInfo(20230312, \"コーラックを飲みました。今日も快便です。\"), createInfo(20230311, \"便秘になりました。\"), createInfo(20230310, \"痔の手術しました。今日も快便です。\"), createInfo(20230309, \"痔になりました。お尻が痛みます。\"), createInfo(20231231, \"今日も快便です\")];\nfunction WhatNew() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WhatNew\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u304A\\u77E5\\u3089\\u305B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: informations.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Dessert (100g serving)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Fat\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Carbs\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Protein\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = WhatNew;\nexport default WhatNew;\nvar _c;\n$RefreshReg$(_c, \"WhatNew\");","map":{"version":3,"names":["React","Typography","Table","TableContainer","TableHead","TableRow","TableCell","format","parse","jsxDEV","_jsxDEV","createInfo","inputDate","info","formatday","Date","informations","WhatNew","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","component","Paper","sx","minWidth","align","TableBody","rows","row","border","scope","name","calories","fat","carbs","protein","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/WhatNew.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n} from \"@mui/material\";\n\nimport { format, parse } from \"date-fns\";\n\nfunction createInfo(inputDate: any, info: any) {\n  const formatday = format(\n    parse(inputDate, \"yyyyMMdd\", new Date()),\n    \"yyyy年.MM.dd\"\n  );\n  return formatday + \"：\" + info;\n}\nconst informations = [\n  createInfo(20230312, \"コーラックを飲みました。今日も快便です。\"),\n  createInfo(20230311, \"便秘になりました。\"),\n  createInfo(20230310, \"痔の手術しました。今日も快便です。\"),\n  createInfo(20230309, \"痔になりました。お尻が痛みます。\"),\n  createInfo(20231231, \"今日も快便です\"),\n];\nfunction WhatNew() {\n  return (\n    <div className=\"WhatNew\">\n      <Typography style={{ color: \"red\" }}>お知らせ</Typography>\n      <div>\n        {informations.map((item, index) => {\n          return <Typography key={index}>{item}</Typography>;\n        })}\n      </div>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default WhatNew;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}