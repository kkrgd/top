{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\dialog\\\\ImageDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Dialog, CardMedia } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDialog = props => {\n  _s();\n  /** 画面パラメータ */\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  /**\r\n   * コンポーネントに渡す引数\r\n   */\n  const compProps = {\n    bookShowDialog: {\n      open: dialogOpenF,\n      //ダイアログの表示プローアティ\n      bookparam: props.bookparam,\n      onClose: () => setDialogOpen(false) //ダイアログ非表示処理\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: props.bookParam.image,\n      title: \"スケジュール\" + props.bookParam.id,\n      style: {\n        maxWidth: props.bookParam.sizePer + \"%\"\n      },\n      onClick: () => setDialogOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      ...compProps.bookShowDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageDialog, \"b79sV4Ur295qa8CEsXVhtHGdgXA=\");\n_c = ImageDialog;\nexport default ImageDialog;\nvar _c;\n$RefreshReg$(_c, \"ImageDialog\");","map":{"version":3,"names":["React","useState","Box","Dialog","CardMedia","jsxDEV","_jsxDEV","ImageDialog","props","_s","dialogOpen","setDialogOpen","compProps","bookShowDialog","open","dialogOpenF","bookparam","onClose","children","component","image","bookParam","title","id","style","maxWidth","sizePer","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/dialog/ImageDialog.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Box, Typography, Dialog, Card, CardMedia } from \"@mui/material\";\r\nconst ImageDialog = (props: any) => {\r\n  /** 画面パラメータ */\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  /**\r\n   * コンポーネントに渡す引数\r\n   */\r\n  const compProps = {\r\n    bookShowDialog: {\r\n      open: dialogOpenF, //ダイアログの表示プローアティ\r\n      bookparam: props.bookparam,\r\n      onClose: () => setDialogOpen(false), //ダイアログ非表示処理\r\n    },\r\n  };\r\n  return (\r\n    <Box>\r\n      {/* 画像の表示 */}\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={props.bookParam.image}\r\n        title={\"スケジュール\" + props.bookParam.id}\r\n        style={{ maxWidth: props.bookParam.sizePer + \"%\" }}\r\n        onClick={() => setDialogOpen(true)}\r\n      />\r\n      {/* ダイアログの表示 */}\r\n      <Dialog {...compProps.bookShowDialog} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ImageDialog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAeC,GAAG,EAAcC,MAAM,EAAQC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/E,MAAMC,WAAW,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEnD;AACF;AACA;EACE,MAAMW,SAAS,GAAG;IAChBC,cAAc,EAAE;MACdC,IAAI,EAAEC,WAAW;MAAE;MACnBC,SAAS,EAAER,KAAK,CAACQ,SAAS;MAC1BC,OAAO,EAAEA,CAAA,KAAMN,aAAa,CAAC,KAAK,CAAC,CAAE;IACvC;EACF,CAAC;;EACD,oBACEL,OAAA,CAACJ,GAAG;IAAAgB,QAAA,gBAEFZ,OAAA,CAACF,SAAS;MACRe,SAAS,EAAC,KAAK;MACfC,KAAK,EAAEZ,KAAK,CAACa,SAAS,CAACD,KAAM;MAC7BE,KAAK,EAAE,QAAQ,GAAGd,KAAK,CAACa,SAAS,CAACE,EAAG;MACrCC,KAAK,EAAE;QAAEC,QAAQ,EAAEjB,KAAK,CAACa,SAAS,CAACK,OAAO,GAAG;MAAI,CAAE;MACnDC,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAC,IAAI;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eAEFzB,OAAA,CAACH,MAAM;MAAA,GAAKS,SAAS,CAACC;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV,CAAC;AAACtB,EAAA,CA5BIF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}