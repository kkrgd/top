{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatISO9075;\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../isValid/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/addLeadingZeros/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\nfunction formatISO9075(dirtyDate, options) {\n  var _options$format, _options$representati;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = (0, _index.default)(dirtyDate);\n  if (!(0, _index2.default)(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = (0, _index3.default)(originalDate.getDate(), 2);\n    var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);\n    var year = (0, _index3.default)(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n  if (representation !== 'date') {\n    var hour = (0, _index3.default)(originalDate.getHours(), 2);\n    var minute = (0, _index3.default)(originalDate.getMinutes(), 2);\n    var second = (0, _index3.default)(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n  return result;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","formatISO9075","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","dirtyDate","options","_options$format","_options$representati","arguments","length","TypeError","concat","originalDate","RangeError","format","String","representation","result","dateDelimiter","timeDelimiter","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","separator","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/formatISO9075/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatISO9075;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../isValid/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/addLeadingZeros/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\nfunction formatISO9075(dirtyDate, options) {\n  var _options$format, _options$representati;\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = (0, _index.default)(dirtyDate);\n\n  if (!(0, _index2.default)(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = (0, _index3.default)(originalDate.getDate(), 2);\n    var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);\n    var year = (0, _index3.default)(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = (0, _index3.default)(originalDate.getHours(), 2);\n    var minute = (0, _index3.default)(originalDate.getMinutes(), 2);\n    var second = (0, _index3.default)(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}\n\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}