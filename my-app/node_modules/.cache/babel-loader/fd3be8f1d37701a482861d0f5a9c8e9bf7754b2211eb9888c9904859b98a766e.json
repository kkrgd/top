{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekOfInterval;\nvar _index = _interopRequireDefault(require(\"../addWeeks/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nfunction eachWeekOfInterval(dirtyInterval, options) {\n  (0, _index4.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index3.default)(interval.start);\n  var endDate = (0, _index3.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var startDateWeek = (0, _index2.default)(startDate, options);\n  var endDateWeek = (0, _index2.default)(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push((0, _index3.default)(currentWeek));\n    currentWeek = (0, _index.default)(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n  return weeks;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","eachWeekOfInterval","_index","_interopRequireDefault","require","_index2","_index3","_index4","obj","__esModule","dirtyInterval","options","arguments","interval","startDate","start","endDate","end","endTime","getTime","RangeError","startDateWeek","endDateWeek","setHours","weeks","currentWeek","push","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/eachWeekOfInterval/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../addWeeks/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfWeek/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nfunction eachWeekOfInterval(dirtyInterval, options) {\n  (0, _index4.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index3.default)(interval.start);\n  var endDate = (0, _index3.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = (0, _index2.default)(startDate, options);\n  var endDateWeek = (0, _index2.default)(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push((0, _index3.default)(currentWeek));\n    currentWeek = (0, _index.default)(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,kBAAkB;AAEpC,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAEpE,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAExE,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAEnE,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,SAASD,sBAAsBA,CAACK,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAER,OAAO,EAAEQ;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,kBAAkBA,CAACS,aAAa,EAAEC,OAAO,EAAE;EAClD,CAAC,CAAC,EAAEJ,OAAO,CAACP,OAAO,EAAE,CAAC,EAAEY,SAAS,CAAC;EAClC,IAAIC,QAAQ,GAAGH,aAAa,IAAI,CAAC,CAAC;EAClC,IAAII,SAAS,GAAG,CAAC,CAAC,EAAER,OAAO,CAACN,OAAO,EAAEa,QAAQ,CAACE,KAAK,CAAC;EACpD,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACN,OAAO,EAAEa,QAAQ,CAACI,GAAG,CAAC;EAChD,IAAIC,OAAO,GAAGF,OAAO,CAACG,OAAO,EAAE,CAAC,CAAC;;EAEjC,IAAI,EAAEL,SAAS,CAACK,OAAO,EAAE,IAAID,OAAO,CAAC,EAAE;IACrC,MAAM,IAAIE,UAAU,CAAC,kBAAkB,CAAC;EAC1C;EAEA,IAAIC,aAAa,GAAG,CAAC,CAAC,EAAEhB,OAAO,CAACL,OAAO,EAAEc,SAAS,EAAEH,OAAO,CAAC;EAC5D,IAAIW,WAAW,GAAG,CAAC,CAAC,EAAEjB,OAAO,CAACL,OAAO,EAAEgB,OAAO,EAAEL,OAAO,CAAC,CAAC,CAAC;;EAE1DU,aAAa,CAACE,QAAQ,CAAC,EAAE,CAAC;EAC1BD,WAAW,CAACC,QAAQ,CAAC,EAAE,CAAC;EACxBL,OAAO,GAAGI,WAAW,CAACH,OAAO,EAAE;EAC/B,IAAIK,KAAK,GAAG,EAAE;EACd,IAAIC,WAAW,GAAGJ,aAAa;EAE/B,OAAOI,WAAW,CAACN,OAAO,EAAE,IAAID,OAAO,EAAE;IACvCO,WAAW,CAACF,QAAQ,CAAC,CAAC,CAAC;IACvBC,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,EAAEpB,OAAO,CAACN,OAAO,EAAEyB,WAAW,CAAC,CAAC;IAC7CA,WAAW,GAAG,CAAC,CAAC,EAAEvB,MAAM,CAACF,OAAO,EAAEyB,WAAW,EAAE,CAAC,CAAC;IACjDA,WAAW,CAACF,QAAQ,CAAC,EAAE,CAAC;EAC1B;EAEA,OAAOC,KAAK;AACd;AAEAG,MAAM,CAAC7B,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}