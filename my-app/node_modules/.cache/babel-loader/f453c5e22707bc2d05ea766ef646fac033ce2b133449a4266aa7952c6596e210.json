{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\WhatNew.tsx\";\nimport React from \"react\";\nimport { Typography, List, ListItem, ListItemButton, ListItemText, Grid } from \"@mui/material\";\nimport { format, parse } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(inputDate) {\n  const formatday = format(parse(inputDate, \"yyyyMMdd\", new Date()), \"yyyy年.MM.dd\");\n  return formatday;\n}\nlet informations = [[formatDate(20230312), \"コーラックを飲みました。今日も快便です。\"], [formatDate(20230311), \"便秘になりました。\"], [formatDate(20230310), \"痔の手術しました。今日も快便です\"], [formatDate(20230309), \"痔になりました。お尻が痛みます。\"], [formatDate(20231231), \"今日も快便です\"]];\nfunction WhatNew() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WhatNew\",\n    style: {},\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"blue\"\n        },\n        children: \"\\u304A\\u77E5\\u3089\\u305B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        style: {\n          width: \"50vw\",\n          marginLeft: \"20%\"\n        },\n        children: informations.map((item, _index) => {\n          return /*#__PURE__*/_jsxDEV(List, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                style: {\n                  textAlign: \"left\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: item[0],\n                  style: {\n                    width: \"10vw\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: item[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = WhatNew;\nexport default WhatNew;\nvar _c;\n$RefreshReg$(_c, \"WhatNew\");","map":{"version":3,"names":["React","Typography","List","ListItem","ListItemButton","ListItemText","Grid","format","parse","jsxDEV","_jsxDEV","formatDate","inputDate","formatday","Date","informations","WhatNew","className","style","children","container","direction","justifyContent","color","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","width","marginLeft","map","_index","disablePadding","textAlign","primary","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/WhatNew.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n} from \"@mui/material\";\n\nimport { format, parse } from \"date-fns\";\n\nfunction formatDate(inputDate: any) {\n  const formatday = format(\n    parse(inputDate, \"yyyyMMdd\", new Date()),\n    \"yyyy年.MM.dd\"\n  );\n  return formatday;\n}\nlet informations = [\n  [formatDate(20230312), \"コーラックを飲みました。今日も快便です。\"],\n  [formatDate(20230311), \"便秘になりました。\"],\n  [formatDate(20230310), \"痔の手術しました。今日も快便です\"],\n  [formatDate(20230309), \"痔になりました。お尻が痛みます。\"],\n  [formatDate(20231231), \"今日も快便です\"],\n];\nfunction WhatNew() {\n  return (\n    <div className=\"WhatNew\" style={{}}>\n      <Grid container direction=\"column\" justifyContent=\"center\">\n        <Typography style={{ color: \"blue\" }}>お知らせ</Typography>\n        <Grid item xs={8} style={{ width: \"50vw\", marginLeft: \"20%\" }}>\n          {informations.map((item: any, _index) => {\n            return (\n              <List>\n                <ListItem disablePadding>\n                  <ListItemButton style={{ textAlign: \"left\" }}>\n                    <ListItemText primary={item[0]} style={{ width: \"10vw\" }} />\n                    <ListItemText primary={item[1]} />\n                  </ListItemButton>\n                </ListItem>\n              </List>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default WhatNew;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}