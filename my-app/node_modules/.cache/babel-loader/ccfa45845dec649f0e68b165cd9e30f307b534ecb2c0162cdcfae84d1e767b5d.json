{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\WhatNew.tsx\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { format, parse } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createInfo(inputDate, info) {\n  const formatday = format(parse(inputDate, \"yyyyMMdd\", new Date()), \"yyyy年.MM.dd\");\n  return formatday + \"：\" + info;\n}\nconst informations = [createInfo(20230312, \"コーラックを飲みました。今日も快便です。\"), createInfo(20230311, \"便秘になりました。\"), createInfo(20230310, \"痔の手術しました。今日も快便です。\"), createInfo(20230309, \"痔になりました。お尻が痛みます。\"), createInfo(20231231, \"今日も快便です\")];\nfunction WhatNew() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WhatNew\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u65B0\\u7740\\u60C5\\u5831\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: informations.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = WhatNew;\nexport default WhatNew;\nvar _c;\n$RefreshReg$(_c, \"WhatNew\");","map":{"version":3,"names":["React","Typography","format","parse","jsxDEV","_jsxDEV","createInfo","inputDate","info","formatday","Date","informations","WhatNew","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/WhatNew.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { format, parse } from \"date-fns\";\r\n\r\nfunction createInfo(inputDate: any, info: any) {\r\n  const formatday = format(\r\n    parse(inputDate, \"yyyyMMdd\", new Date()),\r\n    \"yyyy年.MM.dd\"\r\n  );\r\n  return formatday + \"：\" + info;\r\n}\r\nconst informations = [\r\n  createInfo(20230312, \"コーラックを飲みました。今日も快便です。\"),\r\n  createInfo(20230311, \"便秘になりました。\"),\r\n  createInfo(20230310, \"痔の手術しました。今日も快便です。\"),\r\n  createInfo(20230309, \"痔になりました。お尻が痛みます。\"),\r\n  createInfo(20231231, \"今日も快便です\"),\r\n];\r\nfunction WhatNew() {\r\n  return (\r\n    <div className=\"WhatNew\">\r\n      <Typography style={{ color: \"red\" }}>新着情報</Typography>\r\n      <div>\r\n        {informations.map((item, index) => {\r\n          return <Typography key={index}>{item}</Typography>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WhatNew;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,SAASC,MAAM,EAAEC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAACC,SAAc,EAAEC,IAAS,EAAE;EAC7C,MAAMC,SAAS,GAAGP,MAAM,CACtBC,KAAK,CAACI,SAAS,EAAE,UAAU,EAAE,IAAIG,IAAI,EAAE,CAAC,EACxC,aAAa,CACd;EACD,OAAOD,SAAS,GAAG,GAAG,GAAGD,IAAI;AAC/B;AACA,MAAMG,YAAY,GAAG,CACnBL,UAAU,CAAC,QAAQ,EAAE,sBAAsB,CAAC,EAC5CA,UAAU,CAAC,QAAQ,EAAE,WAAW,CAAC,EACjCA,UAAU,CAAC,QAAQ,EAAE,mBAAmB,CAAC,EACzCA,UAAU,CAAC,QAAQ,EAAE,kBAAkB,CAAC,EACxCA,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAChC;AACD,SAASM,OAAOA,CAAA,EAAG;EACjB,oBACEP,OAAA;IAAKQ,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBT,OAAA,CAACJ,UAAU;MAACc,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACtDf,OAAA;MAAAS,QAAA,EACGH,YAAY,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACjC,oBAAOlB,OAAA,CAACJ,UAAU;UAAAa,QAAA,EAAcQ;QAAI,GAAZC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAqB;MACpD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACI,EAAA,GAXQZ,OAAO;AAahB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}