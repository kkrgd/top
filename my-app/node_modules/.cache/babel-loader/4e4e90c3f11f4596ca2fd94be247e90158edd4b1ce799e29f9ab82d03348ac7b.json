{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\WhatNew.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\nimport { Typography, ListItem, ListItemButton, ListItemText, Grid } from \"@mui/material\";\nimport { format, parse } from \"date-fns\";\nimport { Box } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(inputDate) {\n  const formatday = format(parse(inputDate, \"yyyyMMdd\", new Date()), \"yyyy年.MM.dd\");\n  return formatday;\n}\nconst informations = [[formatDate(20230312), \"今日は晴れです。\"], [formatDate(20230311), \"明日は台風です。非常時に備えましょう。\"], [formatDate(20230310), \"今日は曇りです。\"], [formatDate(20230309), \"今日の天気は雨です。傘をお持ちください。\"], [formatDate(20231231), \"今日の天気は晴れです\"]];\nfunction WhatNew() {\n  _s();\n  const {\n    ref,\n    inView\n  } = useInView({\n    // オプション\n    rootMargin: \"-50px\",\n    // ref要素が現れてから50px過ぎたら\n    triggerOnce: true // 最初の一度だけ実行\n  });\n\n  const myStyleList = {\n    width: {\n      sm: 200,\n      md: \"100\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"WhatNew\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      mb: 6,\n      className: \"animate__animated animate__fadeInUp\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: inView && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          mb: 3,\n          children: \"\\u304A\\u77E5\\u3089\\u305B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: informations.map((item, _index) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            sx: myStyleList,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              sx: {\n                textAlign: \"left\",\n                borderBottom: 0.5,\n                borderColor: \"#e6e6e6\"\n              },\n              disableRipple: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                flexDirection: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: item[0],\n                    primaryTypographyProps: {\n                      color: \"secondary\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: item[1],\n                    primaryTypographyProps: {\n                      color: \"secondary\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, _index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(WhatNew, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n  return [useInView];\n});\n_c = WhatNew;\nexport default WhatNew;\nvar _c;\n$RefreshReg$(_c, \"WhatNew\");","map":{"version":3,"names":["React","useInView","Typography","ListItem","ListItemButton","ListItemText","Grid","format","parse","Box","jsxDEV","_jsxDEV","formatDate","inputDate","formatday","Date","informations","WhatNew","_s","ref","inView","rootMargin","triggerOnce","myStyleList","width","sm","md","className","children","container","direction","justifyContent","alignItems","mb","item","xs","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","map","_index","disablePadding","sx","textAlign","borderBottom","borderColor","disableRipple","flexDirection","primary","primaryTypographyProps","color","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/WhatNew.tsx"],"sourcesContent":["import React from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\nimport {\n  Typography,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Grid,\n} from \"@mui/material\";\n\nimport { format, parse } from \"date-fns\";\nimport { Box } from \"@mui/system\";\n\nfunction formatDate(inputDate: any) {\n  const formatday = format(\n    parse(inputDate, \"yyyyMMdd\", new Date()),\n    \"yyyy年.MM.dd\"\n  );\n  return formatday;\n}\nconst informations = [\n  [formatDate(20230312), \"今日は晴れです。\"],\n  [formatDate(20230311), \"明日は台風です。非常時に備えましょう。\"],\n  [formatDate(20230310), \"今日は曇りです。\"],\n  [formatDate(20230309), \"今日の天気は雨です。傘をお持ちください。\"],\n  [formatDate(20231231), \"今日の天気は晴れです\"],\n];\nfunction WhatNew() {\n  const { ref, inView } = useInView({\n    // オプション\n    rootMargin: \"-50px\", // ref要素が現れてから50px過ぎたら\n    triggerOnce: true, // 最初の一度だけ実行\n  });\n  const myStyleList = {\n    width: { sm: 200, md: \"100\" },\n  };\n  return (\n    <Box className=\"WhatNew\" ref={ref}>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        mb={6}\n        className=\"animate__animated animate__fadeInUp\"\n      >\n        <Grid item xs={12} md={6}>\n          {inView && (\n            <Typography variant=\"h4\" align=\"center\" mb={3}>\n              お知らせ\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {informations.map((item: any, _index) => {\n            return (\n              <ListItem disablePadding key={_index} sx={myStyleList}>\n                <ListItemButton\n                  sx={{\n                    textAlign: \"left\",\n                    borderBottom: 0.5,\n                    borderColor: \"#e6e6e6\",\n                  }}\n                  disableRipple\n                >\n                  <Grid item container flexDirection={\"column\"}>\n                    <Grid item>\n                      <ListItemText\n                        primary={item[0]}\n                        primaryTypographyProps={{\n                          color: \"secondary\",\n                        }}\n                      />\n                    </Grid>\n                    <Grid>\n                      <ListItemText\n                        primary={item[1]}\n                        primaryTypographyProps={{\n                          color: \"secondary\",\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </ListItemButton>\n              </ListItem>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default WhatNew;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAO,aAAa;AACpB,SACEC,UAAU,EACVC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,IAAI,QACC,eAAe;AAEtB,SAASC,MAAM,EAAEC,KAAK,QAAQ,UAAU;AACxC,SAASC,GAAG,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAACC,SAAc,EAAE;EAClC,MAAMC,SAAS,GAAGP,MAAM,CACtBC,KAAK,CAACK,SAAS,EAAE,UAAU,EAAE,IAAIE,IAAI,EAAE,CAAC,EACxC,aAAa,CACd;EACD,OAAOD,SAAS;AAClB;AACA,MAAME,YAAY,GAAG,CACnB,CAACJ,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,EAClC,CAACA,UAAU,CAAC,QAAQ,CAAC,EAAE,qBAAqB,CAAC,EAC7C,CAACA,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,EAClC,CAACA,UAAU,CAAC,QAAQ,CAAC,EAAE,sBAAsB,CAAC,EAC9C,CAACA,UAAU,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,CACrC;AACD,SAASK,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAGnB,SAAS,CAAC;IAChC;IACAoB,UAAU,EAAE,OAAO;IAAE;IACrBC,WAAW,EAAE,IAAI,CAAE;EACrB,CAAC,CAAC;;EACF,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAG;MAAEC,EAAE,EAAE;IAAM;EAC9B,CAAC;EACD,oBACEf,OAAA,CAACF,GAAG;IAACkB,SAAS,EAAC,SAAS;IAACR,GAAG,EAAEA,GAAI;IAAAS,QAAA,eAChCjB,OAAA,CAACL,IAAI;MACHuB,SAAS;MACTC,SAAS,EAAC,QAAQ;MAClBC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,EAAE,EAAE,CAAE;MACNN,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAE/CjB,OAAA,CAACL,IAAI;QAAC4B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACT,EAAE,EAAE,CAAE;QAAAE,QAAA,EACtBR,MAAM,iBACLT,OAAA,CAACT,UAAU;UAACkC,OAAO,EAAC,IAAI;UAACC,KAAK,EAAC,QAAQ;UAACJ,EAAE,EAAE,CAAE;UAAAL,QAAA,EAAC;QAE/C;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACP9B,OAAA,CAACL,IAAI;QAAC4B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACT,EAAE,EAAE,CAAE;QAAAE,QAAA,EACtBZ,YAAY,CAAC0B,GAAG,CAAC,CAACR,IAAS,EAAES,MAAM,KAAK;UACvC,oBACEhC,OAAA,CAACR,QAAQ;YAACyC,cAAc;YAAcC,EAAE,EAAEtB,WAAY;YAAAK,QAAA,eACpDjB,OAAA,CAACP,cAAc;cACbyC,EAAE,EAAE;gBACFC,SAAS,EAAE,MAAM;gBACjBC,YAAY,EAAE,GAAG;gBACjBC,WAAW,EAAE;cACf,CAAE;cACFC,aAAa;cAAArB,QAAA,eAEbjB,OAAA,CAACL,IAAI;gBAAC4B,IAAI;gBAACL,SAAS;gBAACqB,aAAa,EAAE,QAAS;gBAAAtB,QAAA,gBAC3CjB,OAAA,CAACL,IAAI;kBAAC4B,IAAI;kBAAAN,QAAA,eACRjB,OAAA,CAACN,YAAY;oBACX8C,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAE;oBACjBkB,sBAAsB,EAAE;sBACtBC,KAAK,EAAE;oBACT;kBAAE;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBACF;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACG,eACP9B,OAAA,CAACL,IAAI;kBAAAsB,QAAA,eACHjB,OAAA,CAACN,YAAY;oBACX8C,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAE;oBACjBkB,sBAAsB,EAAE;sBACtBC,KAAK,EAAE;oBACT;kBAAE;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBACF;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACG;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACQ,GA3BWE,MAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QA4BzB;QAEf,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACvB,EAAA,CAhEQD,OAAO;EAAA,QACUhB,SAAS;AAAA;AAAAqD,EAAA,GAD1BrC,OAAO;AAkEhB,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}