{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInMonths;\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInMonths","_index","_interopRequireDefault","require","_index2","_index3","_index4","_index5","obj","__esModule","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","result","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/differenceInMonths/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInMonths;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,kBAAkB;AAEpC,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAElE,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAAC;AAEvF,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAEvE,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,IAAII,OAAO,GAAGL,sBAAsB,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAE7E,SAASD,sBAAsBA,CAACM,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAET,OAAO,EAAES;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,kBAAkBA,CAACU,aAAa,EAAEC,cAAc,EAAE;EACzD,CAAC,CAAC,EAAEL,OAAO,CAACP,OAAO,EAAE,CAAC,EAAEa,SAAS,CAAC;EAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAEZ,MAAM,CAACF,OAAO,EAAEW,aAAa,CAAC;EACjD,IAAII,SAAS,GAAG,CAAC,CAAC,EAAEb,MAAM,CAACF,OAAO,EAAEY,cAAc,CAAC;EACnD,IAAII,IAAI,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACN,OAAO,EAAEc,QAAQ,EAAEC,SAAS,CAAC;EACpD,IAAIE,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEd,OAAO,CAACL,OAAO,EAAEc,QAAQ,EAAEC,SAAS,CAAC,CAAC;EACpE,IAAIK,MAAM,CAAC,CAAC;;EAEZ,IAAIH,UAAU,GAAG,CAAC,EAAE;IAClBG,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,IAAIN,QAAQ,CAACO,QAAQ,EAAE,KAAK,CAAC,IAAIP,QAAQ,CAACQ,OAAO,EAAE,GAAG,EAAE,EAAE;MACxD;MACA;MACAR,QAAQ,CAACS,OAAO,CAAC,EAAE,CAAC;IACtB;IAEAT,QAAQ,CAACU,QAAQ,CAACV,QAAQ,CAACO,QAAQ,EAAE,GAAGL,IAAI,GAAGC,UAAU,CAAC,CAAC,CAAC;IAC5D;;IAEA,IAAIQ,kBAAkB,GAAG,CAAC,CAAC,EAAEnB,OAAO,CAACN,OAAO,EAAEc,QAAQ,EAAEC,SAAS,CAAC,KAAK,CAACC,IAAI,CAAC,CAAC;;IAE9E,IAAI,CAAC,CAAC,EAAER,OAAO,CAACR,OAAO,EAAE,CAAC,CAAC,EAAEE,MAAM,CAACF,OAAO,EAAEW,aAAa,CAAC,CAAC,IAAIM,UAAU,KAAK,CAAC,IAAI,CAAC,CAAC,EAAEX,OAAO,CAACN,OAAO,EAAEW,aAAa,EAAEI,SAAS,CAAC,KAAK,CAAC,EAAE;MACxIU,kBAAkB,GAAG,KAAK;IAC5B;IAEAL,MAAM,GAAGJ,IAAI,IAAIC,UAAU,GAAGS,MAAM,CAACD,kBAAkB,CAAC,CAAC;EAC3D,CAAC,CAAC;;EAGF,OAAOL,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;AAClC;AAEAO,MAAM,CAAC7B,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}