{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConference\\\\src\\\\components\\\\Inquiry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { init, send } from \"@emailjs/browser\";\nimport { TextField, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inquiry() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"item_8\",\n    className: \"Inquiry\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"\\u554F\\u3044\\u5408\\u308F\\u305B\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto mt-9 max-w-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => onSubmit(e),\n        className: \"w-full space-y-9 rounded bg-white p-3  shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"name\",\n          label: \"\\u304A\\u540D\\u524D\",\n          variant: \"outlined\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n          variant: \"outlined\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            className: \" mb-3 block font-bold text-black\",\n            children: \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Inquiry, \"sNrM0vKPhEJrsKS6i3pljzcv/b0=\");\n_c = Inquiry;\nconst onSubmit = async props => {\n  // 必要なIDをそれぞれ環境変数から取得\n  const userID = process.env.REACT_APP_PUBLICKEY || \"\";\n  const serviceID = process.env.REACT_APP_SERVICE_ID || \"\";\n  const templateID = process.env.REACT_APP_TEMPLATE_ID || \"\";\n  // emailJS初期化\n  console.log(\"aaa\");\n  init(userID);\n\n  // emailJS送信データを定義\n  const params = {\n    from_name: props.name,\n    email: props.email,\n    content: props.content\n  };\n\n  // emailJS送信\n  try {\n    await send(serviceID, templateID, params, userID);\n    alert(\"送信成功\");\n  } catch (error) {\n    // 送信失敗したらalertで表示\n    alert(error);\n  }\n};\nexport default Inquiry;\nvar _c;\n$RefreshReg$(_c, \"Inquiry\");","map":{"version":3,"names":["React","useState","Typography","init","send","TextField","Button","jsxDEV","_jsxDEV","Inquiry","_s","name","setName","email","setEmail","content","setContent","id","className","children","variant","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","label","onChange","target","value","htmlFor","type","size","_c","props","userID","process","env","REACT_APP_PUBLICKEY","serviceID","REACT_APP_SERVICE_ID","templateID","REACT_APP_TEMPLATE_ID","console","log","params","from_name","alert","error","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConference/src/components/Inquiry.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { init, send } from \"@emailjs/browser\";\nimport { TextField, Button } from \"@mui/material\";\n\nfunction Inquiry() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  return (\n    <div id=\"item_8\" className=\"Inquiry\">\n      <Typography variant=\"h4\" style={{ textAlign: \"center\" }}>\n        問い合わせ\n        <br />\n      </Typography>\n      <div className=\"mx-auto mt-9 max-w-lg\">\n        <form\n          onSubmit={(e) => onSubmit(e)}\n          className=\"w-full space-y-9 rounded bg-white p-3  shadow-2xl\"\n        >\n          <TextField\n            id=\"name\"\n            label=\"お名前\"\n            variant=\"outlined\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <TextField\n            id=\"email\"\n            label=\"メールアドレス\"\n            variant=\"outlined\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <div>\n            <label\n              htmlFor=\"content\"\n              className=\" mb-3 block font-bold text-black\"\n            >\n              お問い合わせ内容\n            </label>\n            <textarea\n              id=\"content\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\n            送信\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\nconst onSubmit = async (props: any) => {\n  // 必要なIDをそれぞれ環境変数から取得\n  const userID = process.env.REACT_APP_PUBLICKEY || \"\";\n  const serviceID = process.env.REACT_APP_SERVICE_ID || \"\";\n  const templateID = process.env.REACT_APP_TEMPLATE_ID || \"\";\n  // emailJS初期化\n  console.log(\"aaa\");\n  init(userID);\n\n  // emailJS送信データを定義\n  const params = {\n    from_name: props.name,\n    email: props.email,\n    content: props.content,\n  };\n\n  // emailJS送信\n  try {\n    await send(serviceID, templateID, params, userID);\n    alert(\"送信成功\");\n  } catch (error) {\n    // 送信失敗したらalertで表示\n    alert(error);\n  }\n};\nexport default Inquiry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}