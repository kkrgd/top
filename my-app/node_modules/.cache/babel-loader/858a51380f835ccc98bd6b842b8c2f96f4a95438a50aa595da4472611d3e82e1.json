{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInBusinessDays;\nvar _index = _interopRequireDefault(require(\"../addDays/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarDays/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../isSameDay/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../isValid/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../isWeekend/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index7 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index8 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * const result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n *\n * // How many business days are between\n * // 30 November 2021 and 1 November 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 30),\n *   new Date(2021, 10, 1)\n * )\n * //=> 21\n *\n * // How many business days are between\n * // 1 November 2021 and 1 December 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 11, 1)\n * )\n * //=> -22\n *\n * // How many business days are between\n * // 1 November 2021 and 1 November 2021 ?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 10, 1)\n * )\n * //=> 0\n */\nfunction differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index7.default)(2, arguments);\n  var dateLeft = (0, _index6.default)(dirtyDateLeft);\n  var dateRight = (0, _index6.default)(dirtyDateRight);\n  if (!(0, _index4.default)(dateLeft) || !(0, _index4.default)(dateRight)) return NaN;\n  var calendarDifference = (0, _index2.default)(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = (0, _index8.default)(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = (0, _index.default)(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!(0, _index3.default)(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += (0, _index5.default)(dateRight) ? 0 : sign;\n    dateRight = (0, _index.default)(dateRight, sign);\n  }\n  return result === 0 ? 0 : result;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInBusinessDays","_index","_interopRequireDefault","require","_index2","_index3","_index4","_index5","_index6","_index7","_index8","obj","__esModule","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","NaN","calendarDifference","sign","weeks","result","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/differenceInBusinessDays/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInBusinessDays;\n\nvar _index = _interopRequireDefault(require(\"../addDays/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarDays/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../isSameDay/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../isValid/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isWeekend/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * const result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n *\n * // How many business days are between\n * // 30 November 2021 and 1 November 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 30),\n *   new Date(2021, 10, 1)\n * )\n * //=> 21\n *\n * // How many business days are between\n * // 1 November 2021 and 1 December 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 11, 1)\n * )\n * //=> -22\n *\n * // How many business days are between\n * // 1 November 2021 and 1 November 2021 ?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 10, 1)\n * )\n * //=> 0\n */\nfunction differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index7.default)(2, arguments);\n  var dateLeft = (0, _index6.default)(dirtyDateLeft);\n  var dateRight = (0, _index6.default)(dirtyDateRight);\n  if (!(0, _index4.default)(dateLeft) || !(0, _index4.default)(dateRight)) return NaN;\n  var calendarDifference = (0, _index2.default)(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = (0, _index8.default)(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = (0, _index.default)(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!(0, _index3.default)(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += (0, _index5.default)(dateRight) ? 0 : sign;\n    dateRight = (0, _index.default)(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}