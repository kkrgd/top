{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\WhatNew.tsx\";\nimport React from \"react\";\nimport { Typography, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\nimport { format, parse } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(inputDate, info) {\n  const formatday = format(parse(inputDate, \"yyyyMMdd\", new Date()), \"yyyy年.MM.dd\");\n  return {\n    formatday,\n    info\n  };\n}\nconst informations = [formatDate(20230312, \"コーラックを飲みました。今日も快便です。\"), formatDate(20230311, \"便秘になりました。\"), formatDate(20230310, \"痔の手術しました。今日も快便です\"), formatDate(20230309, \"痔になりました。お尻が痛みます。\"), formatDate(20231231, \"今日も快便です\")];\nfunction WhatNew() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WhatNew\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u304A\\u77E5\\u3089\\u305B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: informations.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: informations.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, row.formatday, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = WhatNew;\nexport default WhatNew;\nvar _c;\n$RefreshReg$(_c, \"WhatNew\");","map":{"version":3,"names":["React","Typography","Table","TableHead","TableRow","TableCell","TableBody","format","parse","jsxDEV","_jsxDEV","formatDate","inputDate","info","formatday","Date","informations","WhatNew","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","sx","minWidth","align","row","border","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/WhatNew.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n} from \"@mui/material\";\n\nimport { format, parse } from \"date-fns\";\n\nfunction formatDate(inputDate: any, info: string) {\n  const formatday = format(\n    parse(inputDate, \"yyyyMMdd\", new Date()),\n    \"yyyy年.MM.dd\"\n  );\n  return { formatday, info };\n}\nconst informations = [\n  formatDate(20230312, \"コーラックを飲みました。今日も快便です。\"),\n  formatDate(20230311, \"便秘になりました。\"),\n  formatDate(20230310, \"痔の手術しました。今日も快便です\"),\n  formatDate(20230309, \"痔になりました。お尻が痛みます。\"),\n  formatDate(20231231, \"今日も快便です\"),\n];\nfunction WhatNew() {\n  return (\n    <div className=\"WhatNew\">\n      <Typography style={{ color: \"red\" }}>お知らせ</Typography>\n      <div>\n        {informations.map((item: any, index: number) => {\n          return <Typography key={index}>{item}</Typography>;\n        })}\n      </div>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {informations.map((row) => (\n            <TableRow\n              key={row.formatday}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell align=\"right\">{row.info}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default WhatNew;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}