{"ast":null,"code":"var _jsxFileName = \"C:\\\\workSpace\\\\react\\\\stSociety\\\\oitaConferenceWork\\\\develop\\\\src\\\\components\\\\IntroVideo.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport YouTube from \"react-youtube\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntroVideo() {\n  _s();\n  const {\n    ref,\n    inView\n  } = useInView({\n    // オプション\n    rootMargin: \"-50px\",\n    // ref要素が現れてから50px過ぎたら\n    triggerOnce: true // 最初の一度だけ実行\n  });\n\n  const smallOpts = {\n    height: \"195\",\n    width: \"320\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const largeOpts = {\n    height: \"480\",\n    width: \"854\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n    }\n  };\n  const myStyleYoutubeSmall = {\n    display: {\n      xs: \"block\",\n      sm: \"none\"\n    }\n  };\n  const myStyleYoutubeLarge = {\n    display: {\n      xs: \"none\",\n      sm: \"block\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"IntroVideo\",\n    id: \"item_1\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      mb: 6,\n      className: \"animate__animated animate__fadeInUp\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: inView && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          mb: 3,\n          children: \"\\u7D39\\u4ECB\\u30D3\\u30C7\\u30AA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: myStyleYoutubeSmall,\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: \"lTRiuFIWV54\",\n          opts: smallOpts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: myStyleYoutubeLarge,\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: \"lTRiuFIWV54\",\n          opts: largeOpts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(IntroVideo, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n  return [useInView];\n});\n_c = IntroVideo;\nexport default IntroVideo;\nvar _c;\n$RefreshReg$(_c, \"IntroVideo\");","map":{"version":3,"names":["React","YouTube","Grid","Typography","useInView","jsxDEV","_jsxDEV","IntroVideo","_s","ref","inView","rootMargin","triggerOnce","smallOpts","height","width","playerVars","autoplay","largeOpts","myStyleYoutubeSmall","display","xs","sm","myStyleYoutubeLarge","className","id","children","container","justifyContent","alignItems","flexDirection","mb","item","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","videoId","opts","_c","$RefreshReg$"],"sources":["C:/workSpace/react/stSociety/oitaConferenceWork/develop/src/components/IntroVideo.tsx"],"sourcesContent":["import React from \"react\";\nimport YouTube, { YouTubeProps } from \"react-youtube\";\nimport tubeStyle from \"../css/Youtube.module.css\";\nimport { Grid, Typography, Link } from \"@mui/material\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"animate.css\";\n\nfunction IntroVideo() {\n  const { ref, inView } = useInView({\n    // オプション\n    rootMargin: \"-50px\", // ref要素が現れてから50px過ぎたら\n    triggerOnce: true, // 最初の一度だけ実行\n  });\n  const smallOpts: YouTubeProps[\"opts\"] = {\n    height: \"195\",\n    width: \"320\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n  const largeOpts: YouTubeProps[\"opts\"] = {\n    height: \"480\",\n    width: \"854\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n    },\n  };\n  const myStyleYoutubeSmall = {\n    display: { xs: \"block\", sm: \"none\" },\n  };\n  const myStyleYoutubeLarge = {\n    display: { xs: \"none\", sm: \"block\" },\n  };\n  return (\n    <div className=\"IntroVideo\" id=\"item_1\" ref={ref}>\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        mb={6}\n        className=\"animate__animated animate__fadeInUp\"\n      >\n        <Grid item>\n          {inView && (\n            <Typography variant=\"h4\" mb={3}>\n              紹介ビデオ\n            </Typography>\n          )}\n        </Grid>\n        <Grid item sx={myStyleYoutubeSmall}>\n          <YouTube videoId=\"lTRiuFIWV54\" opts={smallOpts} />\n        </Grid>\n        <Grid item sx={myStyleYoutubeLarge}>\n          <YouTube videoId=\"lTRiuFIWV54\" opts={largeOpts} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default IntroVideo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAwB,eAAe;AAErD,SAASC,IAAI,EAAEC,UAAU,QAAc,eAAe;AACtD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC;IAChC;IACAO,UAAU,EAAE,OAAO;IAAE;IACrBC,WAAW,EAAE,IAAI,CAAE;EACrB,CAAC,CAAC;;EACF,MAAMC,SAA+B,GAAG;IACtCC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,MAAMC,SAA+B,GAAG;IACtCJ,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACV;IAAA;EAEJ,CAAC;EACD,MAAMG,mBAAmB,GAAG;IAC1BC,OAAO,EAAE;MAAEC,EAAE,EAAE,OAAO;MAAEC,EAAE,EAAE;IAAO;EACrC,CAAC;EACD,MAAMC,mBAAmB,GAAG;IAC1BH,OAAO,EAAE;MAAEC,EAAE,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAQ;EACrC,CAAC;EACD,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAACC,EAAE,EAAC,QAAQ;IAAChB,GAAG,EAAEA,GAAI;IAAAiB,QAAA,eAC/CpB,OAAA,CAACJ,IAAI;MACHyB,SAAS;MACTC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,aAAa,EAAC,QAAQ;MACtBC,EAAE,EAAE,CAAE;MACNP,SAAS,EAAC,qCAAqC;MAAAE,QAAA,gBAE/CpB,OAAA,CAACJ,IAAI;QAAC8B,IAAI;QAAAN,QAAA,EACPhB,MAAM,iBACLJ,OAAA,CAACH,UAAU;UAAC8B,OAAO,EAAC,IAAI;UAACF,EAAE,EAAE,CAAE;UAAAL,QAAA,EAAC;QAEhC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACP/B,OAAA,CAACJ,IAAI;QAAC8B,IAAI;QAACM,EAAE,EAAEnB,mBAAoB;QAAAO,QAAA,eACjCpB,OAAA,CAACL,OAAO;UAACsC,OAAO,EAAC,aAAa;UAACC,IAAI,EAAE3B;QAAU;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACP/B,OAAA,CAACJ,IAAI;QAAC8B,IAAI;QAACM,EAAE,EAAEf,mBAAoB;QAAAG,QAAA,eACjCpB,OAAA,CAACL,OAAO;UAACsC,OAAO,EAAC,aAAa;UAACC,IAAI,EAAEtB;QAAU;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAC7B,EAAA,CArDQD,UAAU;EAAA,QACOH,SAAS;AAAA;AAAAqC,EAAA,GAD1BlC,UAAU;AAuDnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}