{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getISOWeeksInYear;\nvar _index = _interopRequireDefault(require(\"../startOfISOWeekYear/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../addWeeks/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nfunction getISOWeeksInYear(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n  var thisYear = (0, _index.default)(dirtyDate);\n  var nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getISOWeeksInYear","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","MILLISECONDS_IN_WEEK","dirtyDate","arguments","thisYear","nextYear","diff","valueOf","Math","round","module"],"sources":["C:/workSpace/react/stSociety/oitaConference/node_modules/date-fns/getISOWeeksInYear/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getISOWeeksInYear;\n\nvar _index = _interopRequireDefault(require(\"../startOfISOWeekYear/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../addWeeks/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nfunction getISOWeeksInYear(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n  var thisYear = (0, _index.default)(dirtyDate);\n  var nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,iBAAiB;AAEnC,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAE9E,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAErE,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEP,OAAO,EAAEO;EAAI,CAAC;AAAE;AAE9F,IAAIE,oBAAoB,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,iBAAiBA,CAACS,SAAS,EAAE;EACpC,CAAC,CAAC,EAAEJ,OAAO,CAACN,OAAO,EAAE,CAAC,EAAEW,SAAS,CAAC;EAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAEV,MAAM,CAACF,OAAO,EAAEU,SAAS,CAAC;EAC7C,IAAIG,QAAQ,GAAG,CAAC,CAAC,EAAEX,MAAM,CAACF,OAAO,EAAE,CAAC,CAAC,EAAEK,OAAO,CAACL,OAAO,EAAEY,QAAQ,EAAE,EAAE,CAAC,CAAC;EACtE,IAAIE,IAAI,GAAGD,QAAQ,CAACE,OAAO,EAAE,GAAGH,QAAQ,CAACG,OAAO,EAAE,CAAC,CAAC;EACpD;EACA;;EAEA,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAGL,oBAAoB,CAAC;AAChD;AAEAS,MAAM,CAACpB,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}